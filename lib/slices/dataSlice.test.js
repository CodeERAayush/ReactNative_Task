var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _reduxMockStore=_interopRequireDefault(require("redux-mock-store"));var _reduxThunk=_interopRequireDefault(require("redux-thunk"));var _index=_interopRequireWildcard(require("./index"));var _offlineStorage=require("../utils/offlineStorage");var _fake_store_api=_interopRequireDefault(require("fake_store_api"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}jest.mock('../utils/offlineStorage');jest.mock('fake_store_api');var middlewares=[_reduxThunk.default];var mockStore=(0,_reduxMockStore.default)(middlewares);describe('dataSlice',function(){var store;beforeEach(function(){store=mockStore({data:{products:[],currentProduct:null,status:'idle',error:null}});});afterEach(function(){jest.clearAllMocks();});describe('fetchProducts',function(){it('should fetch products successfully',(0,_asyncToGenerator2.default)(function*(){var mockProducts=[{id:1,name:'Product 1'},{id:2,name:'Product 2'}];_fake_store_api.default.DefaultApi.prototype.productsGet=jest.fn().mockResolvedValue(mockProducts);yield store.dispatch((0,_index.fetchProducts)());var actions=store.getActions();expect(actions[0].type).toBe(_index.fetchProducts.pending.type);expect(actions[1].type).toBe(_index.fetchProducts.fulfilled.type);expect(actions[1].payload).toEqual(mockProducts);expect(_offlineStorage.saveData).toHaveBeenCalledWith('products',mockProducts);}));it('should use cached data when API call fails',(0,_asyncToGenerator2.default)(function*(){var mockError=new Error('API Error');var cachedProducts=[{id:1,name:'Cached Product'}];_fake_store_api.default.DefaultApi.prototype.productsGet=jest.fn().mockRejectedValue(mockError);_offlineStorage.loadData.mockResolvedValue(cachedProducts);yield store.dispatch((0,_index.fetchProducts)());var actions=store.getActions();expect(actions[0].type).toBe(_index.fetchProducts.pending.type);expect(actions[1].type).toBe(_index.fetchProducts.fulfilled.type);expect(actions[1].payload).toEqual(cachedProducts);}));});describe('fetchProductById',function(){it('should fetch a product by id successfully',(0,_asyncToGenerator2.default)(function*(){var mockProduct={id:1,name:'Product 1'};_fake_store_api.default.DefaultApi.prototype.productsIdGet=jest.fn().mockResolvedValue(mockProduct);yield store.dispatch((0,_index.fetchProductById)(1));var actions=store.getActions();expect(actions[0].type).toBe(_index.fetchProductById.pending.type);expect(actions[1].type).toBe(_index.fetchProductById.fulfilled.type);expect(actions[1].payload).toEqual(mockProduct);}));it('should handle errors when fetching a product by id',(0,_asyncToGenerator2.default)(function*(){var mockError=new Error('API Error');_fake_store_api.default.DefaultApi.prototype.productsIdGet=jest.fn().mockRejectedValue(mockError);yield store.dispatch((0,_index.fetchProductById)(1));var actions=store.getActions();expect(actions[0].type).toBe(_index.fetchProductById.pending.type);expect(actions[1].type).toBe(_index.fetchProductById.rejected.type);expect(actions[1].payload).toBe(mockError.message);}));});describe('addProduct',function(){it('should add a new product successfully',(0,_asyncToGenerator2.default)(function*(){var newProduct={name:'New Product',price:10};var expectedProduct=Object.assign({},newProduct,{id:expect.any(Number),rating:{rate:0,count:0}});yield store.dispatch((0,_index.addProduct)(newProduct));var actions=store.getActions();expect(actions[0].type).toBe(_index.addProduct.pending.type);expect(actions[1].type).toBe(_index.addProduct.fulfilled.type);expect(actions[1].payload).toMatchObject(expectedProduct);}));});describe('dataReducer',function(){it('should handle initial state',function(){expect((0,_index.default)(undefined,{type:'unknown'})).toEqual({products:[],currentProduct:null,status:'idle',error:null});});it('should handle fetchProducts.fulfilled',function(){var mockProducts=[{id:1,name:'Product 1'},{id:2,name:'Product 2'}];var action={type:_index.fetchProducts.fulfilled.type,payload:mockProducts};var state=(0,_index.default)(undefined,action);expect(state.status).toBe('succeeded');expect(state.products).toEqual(mockProducts);});it('should handle fetchProductById.fulfilled',function(){var mockProduct={id:1,name:'Product 1'};var action={type:_index.fetchProductById.fulfilled.type,payload:mockProduct};var state=(0,_index.default)(undefined,action);expect(state.status).toBe('succeeded');expect(state.currentProduct).toEqual(mockProduct);});it('should handle addProduct.fulfilled',function(){var initialState={products:[{id:1,name:'Existing Product'}],currentProduct:null,status:'idle',error:null};var newProduct={id:2,name:'New Product'};var action={type:_index.addProduct.fulfilled.type,payload:newProduct};var state=(0,_index.default)(initialState,action);expect(state.status).toBe('succeeded');expect(state.products).toHaveLength(2);expect(state.products[0]).toEqual(newProduct);});});});